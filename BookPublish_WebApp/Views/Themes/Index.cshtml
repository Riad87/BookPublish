@model BookPublish_WebApp.Models.ThemesViewModel
@using PagedList.Mvc;
@{
    ViewBag.Title = "Könyv témák";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Könyv témák</h2>

@using (Html.BeginForm())
{
    @Html.HiddenFor(m => m.NameSort)
    @Html.HiddenFor(m => m.ActiveSort)
    @Html.HiddenFor(m => m.CurrentFilter)
    @Html.HiddenFor(m => m.SortOrder)

    <div class="container-fluid">
        @Html.Label("Keresés: ")
        @Html.TextBox("SearchString")
    </div>
    <table class="table table-striped table-hover table-responsive table-condensed" border="0">
        <tr>
            <th> # </th>
            <th>
                @Html.ActionLink("Téma neve", "Index", new { sortOrder = Model.NameSort, currentfilter = Model.CurrentFilter, pagesize = Model.PageSize })
            </th>
            <th>
                @Html.ActionLink("Aktív-e", "Index", new { sortOrder = Model.ActiveSort, currentfilter = Model.CurrentFilter, pagesize = Model.PageSize })
            </th>
            <th>
                Találatok:
                @Html.DropDownList("PageSize", new SelectList(new Dictionary<string, int> { { "2", 2 }, { "5", 5 }, { "10", 10 } }, "Key", "Value", 10), new { id = "pagesizelist" })
                db/oldal
            </th>
        </tr>


        @for (int i = 0; i < Model.Themes.Count; i++)
        {
            <tr>
                <td>
                    @Html.HiddenFor(model => model.Themes[i].ID)
                    @Html.HiddenFor(model => model.Themes[i].ThemeName)
                    @Html.HiddenFor(model => model.Themes[i].Active)
                    @Html.EditorFor(model => model.Themes[i].IsDeleted)
                </td>

                <td align="center">
                    @Html.DisplayFor(modelItem => Model.Themes[i].ThemeName)
                </td>
                <td align="center">
                    @Html.DisplayFor(modelItem => Model.Themes[i].Active)
                </td>
                <td>
                    <button>@Html.ActionLink("Edit", "Edit", new { id = Model.Themes[i].ID })</button>

                </td>
            </tr>
        }

    </table>

    <div class="container">
        Page @Model.PageNumber of @Model.PageCount

        @Html.PagedListPager(new PagedList.PagedList<object>(Model.PagerList.AsQueryable(), Model.PageNumber, Model.PageSize),
                page => Url.Action("Index", new { page, sortOrder = Model.CurrentSort, currentFilter = Model.CurrentFilter, pagesize = Model.PageSize }))
    </div>
    <div class="container">
        <input type="submit" value="Törlés" />
    </div>

}
