@model BookPublish_WebApp.Models.BooksViewModel


@using (Html.BeginForm("Edit","Books", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="modal-body">
        <div class="form-horizontal">
            <ul id="errormessage" name="errormessage"></ul>
            @Html.HiddenFor(model => model.Deleted)
            @Html.HiddenFor(model => model.ID)
            @Html.HiddenFor(model => model.GrossValue)
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.ISBN, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.ValidationMessageFor(model => model.ISBN, "", new { @class = "text-danger" })
                    @Html.EditorFor(model => model.ISBN, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Szerző", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.ValidationMessageFor(model => model.SelectedAuthorID, "", new { @class = "text-danger" })
                    @Html.DropDownListFor(model => model.SelectedAuthorID, Model.AuthorsName, "Válassz szerzőt", new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Borító típusa", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.ValidationMessageFor(model => model.SelectedCoverID, "", new { @class = "text-danger" })
                    @Html.DropDownListFor(model => model.SelectedCoverID, Model.CoverNames, "Válassz borítót", new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Könyv témája", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.ValidationMessageFor(model => model.SelectedThemeID, "", new { @class = "text-danger" })
                    @Html.DropDownListFor(model => model.SelectedThemeID, Model.ThemeNames, "Válassz témát", new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ItemNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.ValidationMessageFor(model => model.ItemNumber, "", new { @class = "text-danger" })
                    @Html.EditorFor(model => model.ItemNumber, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NetValue, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.ValidationMessageFor(model => model.NetValue, "", new { @class = "text-danger" })
                    @Html.EditorFor(model => model.NetValue, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Vat, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.ValidationMessageFor(model => model.Vat, "", new { @class = "text-danger" })
                    @Html.EditorFor(model => model.Vat, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ValidFrom, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.ValidationMessageFor(model => model.ValidFrom, "", new { @class = "text-danger" })
                    @Html.EditorFor(model => model.ValidFrom, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ValidTo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.ValidationMessageFor(model => model.ValidTo, "", new { @class = "text-danger" })
                    @Html.EditorFor(model => model.ValidTo, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>
    </div>

     <div class="modal-footer">
         <button class="btn btn-primary">@Html.ActionLink("Mentés", "Edit", "Books", new { id = String.Empty }, new { id = "btn-edit-submit" })</button>
         <button class="btn btn-default" data-dismiss="modal" aria-hidden="true" id="cancel">Mégsem</button>
     </div>
    
}

