@model PagedList.IPagedList<bookPublishDB.Books>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Könyvek";
    var count = Model.Count;
}

@using (Html.BeginForm("Index", "Books", FormMethod.Get))
{
    <p>@Html.TextBox("searchString", ViewBag.CurrentFilter as string, new { @class = "col-offset-xs-2 col-xs-2" }) <input class="col-xs-offset-3 col-xs-2" type="submit" value="Keresés" /></p>
}

<table class="table table-striped table-hover table-responsive table-condensed" border="0">
    <tr>
        <th align="center">
            @Html.ActionLink("ISBN", "Index", new { sortOrder = ViewBag.ISBN, currentfilter = ViewBag.CurrentFilter })
        </th>
        <th align="center">
            @Html.ActionLink("Könyv neve", "Index", new { sortOrder = ViewBag.Name, currentfilter = ViewBag.CurrentFilter })
        </th>
        <th align="center">
            @Html.ActionLink("Azonosító", "Index", new { sortOrder = ViewBag.ItemNum, currentfilter = ViewBag.CurrentFilter })
        </th>
        <th align="center">
            @Html.ActionLink("Nettó ár", "Index", new { sortOrder = ViewBag.NetValue, currentfilter = ViewBag.CurrentFilter })
        </th>
        <th align="center">
            @Html.ActionLink("Áfa", "Index", new { sortOrder = ViewBag.Vat, currentfilter = ViewBag.CurrentFilter })
        </th>
        <th align="center">
            @Html.ActionLink("Bruttó ár", "Index", new { sortOrder = ViewBag.GrossValue, currentfilter = ViewBag.CurrentFilter })
        </th>
        <th align="center">
            @Html.ActionLink("Érvényes -tól", "Index", new { sortOrder = ViewBag.ValidFrom, currentfilter = ViewBag.CurrentFilter })
        </th>
        <th align="center">
            @Html.ActionLink("Érvényes -ig", "Index", new { sortOrder = ViewBag.ValidTo, currentfilter = ViewBag.CurrentFilter })
        </th>
        <th align="right">
            Találatok:
            @using (Html.BeginForm("Index", "Books", FormMethod.Get))
            {
                @Html.DropDownList("PageSize", new SelectList(new Dictionary<string, int> { { "2", 2 },{"5", 5 }, {"10", 10 } }, "Key","Value", 10), new { id = "pagesizelist" })
                @Html.Hidden("sortorder", ViewBag.CoverName as string)
            }
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.CheckBox("checkbox" ,false , new { id = item.ID })
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ISBN)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ItemNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NetValue)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Vat)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.GrossValue)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ValidFrom)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ValidTo)
            </td>
            <td>
                <button>@Html.ActionLink("Edit", "Edit", new { id = item.ID }) </button>

            </td>
        </tr>
        }

</table>
@*@if (count > 10)
{*@
    <div class="container">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("Index",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, pagesize = ViewBag.PageSize }))
    </div>
@*}*@
<div class="container">

    <button class="btn btn-default col-xs-offset-2 col-xs-2">@Html.ActionLink("Create New", "Create")</button>
    <button class="btn btn-danger col-xs-offset-4 col-xs-2">@Html.ActionLink("Delete", "Delete")</button>

</div>
@section scripts{
    <script>
        @*function PageSize() {
            var select = document.getElementById("list");
            var selected = select.value;
            
            @Url.Action("Index", "Books", new { selected = ViewBag.PageSize  });        

        }*@
        $('#pagesizelist').on('change', function (event) {
            var form = $(event.target).parents('form');
            form.submit();
        });

    </script>
    }