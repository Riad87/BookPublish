@model BookPublish_WebApp.Models.AuthorsViewModel
@using PagedList.Mvc;
@{
    ViewBag.Title = "Authors2";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Authors2</h2>

@using (Html.BeginForm())
{
    @Html.HiddenFor(m => m.NameSort)
    @Html.HiddenFor(m => m.CurrentFilter)
    @Html.HiddenFor(m => m.SortOrder)

    <div class="container-fluid">
        @Html.Label("Keresés: ")
        @Html.TextBox("SearchString")        
    </div>
    <table class="table table-striped table-hover table-responsive table-condensed" border="0">
        <tr>
            <th> # </th>
            <th>
                @Html.ActionLink("Szerző neve", "Index", new { sortOrder = Model.NameSort, currentfilter = Model.CurrentFilter, pagesize = Model.PageSize })
            </th>
            <th>
                @Html.ActionLink("Active-e", "Index", new { sortOrder = Model.ActiveSort, currentfilter = Model.CurrentFilter, pagesize = Model.PageSize })
            </th>
            <th>
                Találatok:
                @Html.DropDownList("PageSize", new SelectList(new Dictionary<string, int> { { "2", 2 }, { "5", 5 }, { "10", 10 } }, "Key", "Value", 10), new { id = "pagesizelist" })
                db/oldal
            </th>
        </tr>


        @for (int i = 0; i < Model.Authors.Count; i++)
        {
            <tr>
                <td>
                    @Html.HiddenFor(model => model.Authors[i].ID)
                    @Html.HiddenFor(model => model.Authors[i].AuthorName)
                    @Html.HiddenFor(model => model.Authors[i].Active)
                    @Html.EditorFor(model => model.Authors[i].IsDeleted)
                </td>

                <td align="center">
                    @Html.DisplayFor(modelItem => Model.Authors[i].AuthorName)
                </td>
                <td align="center">
                    @Html.DisplayFor(modelItem => Model.Authors[i].Active)
                </td>
                <td>
                    <button>@Html.ActionLink("Edit", "Edit", new { id = Model.Authors[i].ID })</button>

                </td>
            </tr>
        }

    </table>

    <div class="container">
        Page @Model.PageNumber of @Model.PageCount

        @Html.PagedListPager(new PagedList.PagedList<object>(Model.PagerList.AsQueryable(), Model.PageNumber, Model.PageSize),
                page => Url.Action("Index", new { page, sortOrder = Model.CurrentSort, currentFilter = Model.CurrentFilter, pagesize = Model.PageSize }))
    </div>

    <input type="submit" value="Törlés" />
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>

        $('#pagesizelist').on('change', function (event) {
            window.location.href = updateQueryStringParameter(window.location.href, 'pagesize', $('#pagesizelist').val());
        });

        $('#SearchString').keypress(function (event) {
            if (event.which == 13) {
                event.preventDefault();                
                window.location.href = updateQueryStringParameter(window.location.href, 'SearchString', $('#SearchString').val());
            }
        });

        function updateQueryStringParameter(uri, key, value) {
            var re = new RegExp("([?&])" + key + "=.*?(&|$)", "i");
            var separator = uri.indexOf('?') !== -1 ? "&" : "?";
            if (uri.match(re)) {
                return uri.replace(re, '$1' + key + "=" + value + '$2');
            }
            else {
                return uri + separator + key + "=" + value;
            }
        }
    </script>
}